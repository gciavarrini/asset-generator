name: Kind Cluster with Korifi

on:
  push

jobs:
  setup-and-install:
    runs-on: ubuntu-latest
    steps:
      # Workaround for https://github.com/nektos/act/issues/107
      # - run: sudo id

      - name: Checkout code
        uses: actions/checkout@master
      
      - name: Setup Kind
        uses: engineerd/setup-kind@v0.6.2
        with:
          version: "v0.24.0"
          name: korifi
          config: hack/kind-config.yaml
      
      - name: Validate KinD cluster creation
        run: |
          kubectl cluster-info
          kubectl version
          kubectl get pods -n kube-system
      
      - name: Install Korifi
        run: |
          kubectl apply -f https://github.com/cloudfoundry/korifi/releases/latest/download/install-korifi-kind.yaml

      - name: Verify Korifi Installation
        run: |
          echo "‚è≥ Waiting for Korifi installation to complete (up to 10 minutes)..."
          sleep 2
          kubectl wait --for=jsonpath='{.status.phase}'=Running pod/$(kubectl get pods -n korifi-installer -l job-name=install-korifi --sort-by=.metadata.creationTimestamp -o jsonpath='{.items[-1:].metadata.name}') --timeout=5m -n korifi-installer
          MAX_RETRIES=120 # 10 minutes (120 * 5 seconds)
          RETRY_COUNT=0
          while [[ $RETRY_COUNT -lt $MAX_RETRIES ]]; do
            if kubectl -n korifi-installer logs job/install-korifi | grep -q "Waiting for the local docker registry to start..."; then
              echo "‚úÖ Korifi is ready"
              exit 0 # Success
            fi

            RETRY_COUNT=$((RETRY_COUNT + 1))
            sleep 5
            echo "üïñ Korifi is starting up... (Attempt $RETRY_COUNT/$MAX_RETRIES)"
          done
      - name: Install cf CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo gpg --dearmor -o /usr/share/keyrings/cli.cloudfoundry.org.gpg
          echo "deb [signed-by=/usr/share/keyrings/cli.cloudfoundry.org.gpg] https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf8-cli
 
      - name: Test Korifi
        run: |
          echo "Target Korifi API"
          export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services localregistry-docker-registry)
          export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
          echo http://$NODE_IP:$NODE_PORT
          cf api
          CF_API_ENDPOINT="https://host.docker.internal" # Or your host's IP
          echo "CF_API_ENDPOINT: $CF_API_ENDPOINT"
          cf api "$CF_API_ENDPOINT" --skip-ssl-validation
          # cf api https://localhost --skip-ssl-validation
          # echo "Authenticate as the cf admin user"
          # cf auth kind-korifi
          # echo "Create and target an org and a space"
          # cf create-org org && cf create-space -o org space && cf target -o org
          # echo "Push a docker app and access it"
          # cf push nginx --docker-image nginxinc/nginx-unprivileged:1.23.2
          # curl -k 
          # CURL_STATUS_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://nginx.apps-127-0-0-1.nip.io)

          # if [[ $CURL_STATUS_CODE != 200 ]]; then
          #   echo "‚ùå Nginx application failed health check. Status code: $CURL_STATUS_CODE"
          #   exit 1
          # fi

          # echo "‚úÖ Nginx application is healthy."

